{"version":3,"sources":["api/goods.js","GoodsList.js","App.js","index.js"],"names":["API_URL","getAll","fetch","then","response","json","get5First","result","sort","a","b","name","localeCompare","slice","getRed","filter","good","color","GoodsList","goods","className","map","key","id","style","App","state","getGoods","showOption","setState","showAll","showFive","showRed","onClick","this","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+NACMA,G,KAAO,yEAEN,SAASC,IACd,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBACvBJ,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAM,OAAIA,EACbC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,OAGhDC,EAAS,kBACpBZ,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAM,OAAIA,EACbQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aCfdC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,yBAAKC,UAAU,cACb,4BACGD,EAAME,KAAI,SAAAL,GAAI,OACb,wBAAIM,IAAKN,EAAKO,GAAIC,MAAO,CAAEP,MAAOD,EAAKC,QAAUD,EAAKL,YCqD/Cc,E,4MAvDbC,MAAQ,CACNP,MAAO,I,EAGTQ,SAAW,SAACC,GACVA,IACGzB,MAAK,SAACgB,GACL,EAAKU,SAAS,CACZV,MAAM,YAAKA,S,EAKnBW,QAAU,WACR,EAAKH,SAAS1B,I,EAGhB8B,SAAW,WACT,EAAKJ,SAASrB,I,EAGhB0B,QAAU,WACR,EAAKL,SAASb,I,uDAId,OACE,yBAAKM,UAAU,OACb,qDACA,4BACEA,UAAU,MACVa,QAASC,KAAKJ,QACdK,KAAK,UAHP,kBAOA,4BACEf,UAAU,MACVa,QAASC,KAAKH,SACdI,KAAK,UAHP,mBAOA,4BACEf,UAAU,MACVa,QAASC,KAAKF,QACdG,KAAK,UAHP,kBAOA,kBAAC,EAAD,CAAWhB,MAAOe,KAAKR,MAAMP,a,GAnDnBiB,IAAMC,WCDxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0d227041.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => (\n  fetch(API_URL)\n    .then(response => response.json())\n    .then(result => result\n      .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5))\n);\n\nexport const getRed = () => (\n  fetch(API_URL)\n    .then(response => response.json())\n    .then(result => result\n      .filter(good => good.color === 'red'))\n);\n","import React from 'react';\nimport './App.scss';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <div className=\"goods-list\">\n    <ul>\n      {goods.map(good => (\n        <li key={good.id} style={{ color: good.color }}>{good.name}</li>\n      ))}\n    </ul>\n  </div>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRed } from './api/goods';\nimport { GoodsList } from './GoodsList';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  getGoods = (showOption) => {\n    showOption()\n      .then((goods) => {\n        this.setState({\n          goods: [...goods],\n        });\n      });\n  }\n\n  showAll = () => {\n    this.getGoods(getAll);\n  }\n\n  showFive = () => {\n    this.getGoods(get5First);\n  }\n\n  showRed = () => {\n    this.getGoods(getRed);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n        <button\n          className=\"btn\"\n          onClick={this.showAll}\n          type=\"button\"\n        >\n          Show All Goods\n        </button>\n        <button\n          className=\"btn\"\n          onClick={this.showFive}\n          type=\"button\"\n        >\n          Show First Five\n        </button>\n        <button\n          className=\"btn\"\n          onClick={this.showRed}\n          type=\"button\"\n        >\n          Show Red Goods\n        </button>\n        <GoodsList goods={this.state.goods} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}